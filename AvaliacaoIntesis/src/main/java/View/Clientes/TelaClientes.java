/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View.Clientes;

import DAO.Pessoas.ClienteDAO;
import Model.Pessoas.Cliente;
import View.TelaInicio;
import javax.swing.JOptionPane;
import javax.swing.table.*;

/**
 *
 * @author Leonardo
 */
public class TelaClientes extends javax.swing.JFrame {

    /**
     * Creates new form TelaClientes
     */
    public TelaClientes() {
        initComponents();
        DefaultTableModel model = (DefaultTableModel) tblClientes.getModel();
        tblClientes.setRowSorter(new TableRowSorter (model));
        
        fillTable();
    }
    
    public void fillTable(){
        DefaultTableModel model = (DefaultTableModel) tblClientes.getModel();
        model.setNumRows(0);
        ClienteDAO cDAO = new ClienteDAO();
        
        for(Cliente c: cDAO.readTabelaCliente()){
            model.addRow(new Object[]{
                c.getId(),
                c.getNome(),
                c.getCpf(),
            });
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCadastroCliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        btnExcluirCliente = new javax.swing.JButton();
        btnAtualizaCliente = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblCPF = new javax.swing.JLabel();
        txtCPF = new javax.swing.JTextField();
        lblEnderco = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        lblTel = new javax.swing.JLabel();
        txtTel = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblClientes = new javax.swing.JLabel();
        btnLimpar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCadastroCliente.setText("Cadastrar");
        btnCadastroCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroClienteActionPerformed(evt);
            }
        });

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Nome", "CPF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClientes);
        if (tblClientes.getColumnModel().getColumnCount() > 0) {
            tblClientes.getColumnModel().getColumn(0).setMinWidth(50);
            tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblClientes.getColumnModel().getColumn(0).setMaxWidth(50);
            tblClientes.getColumnModel().getColumn(2).setMinWidth(120);
            tblClientes.getColumnModel().getColumn(2).setPreferredWidth(120);
            tblClientes.getColumnModel().getColumn(2).setMaxWidth(120);
        }

        btnExcluirCliente.setText("Excluir");
        btnExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirClienteActionPerformed(evt);
            }
        });

        btnAtualizaCliente.setText("Atualizar");
        btnAtualizaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizaClienteActionPerformed(evt);
            }
        });

        lblId.setText("Id");

        txtId.setEnabled(false);

        lblNome.setText("Nome");

        lblCPF.setText("CPF");

        lblEnderco.setText("Endere√ßo");

        lblTel.setText("Telefone");

        lblEmail.setText("Email");

        lblClientes.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblClientes.setText("Clientes");

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVoltar)
                        .addGap(173, 173, 173)
                        .addComponent(lblClientes)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblEnderco)
                                        .addGap(421, 421, 421))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblId)
                                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblNome)
                                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblCPF)
                                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTel)
                                    .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblEmail)
                                        .addGap(239, 239, 239))
                                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addComponent(btnAtualizaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnLimpar)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnExcluirCliente)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnCadastroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(24, Short.MAX_VALUE)
                        .addComponent(lblClientes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblId)
                            .addComponent(lblNome)
                            .addComponent(lblCPF))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEnderco)
                            .addComponent(lblTel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimpar))
                    .addComponent(lblEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastroCliente)
                    .addComponent(btnExcluirCliente)
                    .addComponent(btnAtualizaCliente)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void clean(){
        txtId.setText("");
        txtNome.setText("");
        txtCPF.setText("");
        txtTel.setText("");
        txtEmail.setText("");
        txtEndereco.setText("");
        btnAtualizaCliente.setText("Atualizar");
        btnCadastroCliente.setText("Cadastrar");
    }
    
    private void btnCadastroClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroClienteActionPerformed
        // TODO add your handling code here:
        String txtButton = btnCadastroCliente.getText();
        int textid = 0;
        try{
        textid = Integer.parseInt(txtId.getText());
        } catch (NumberFormatException ex){}
        
        if(txtButton=="Cadastrar" && textid!=0){
        JOptionPane.showMessageDialog(null,"Nao √© possivel cadastrar um cliente existente");
        }
        else{
        if(txtButton=="Cadastrar")
        {
        save();
        }
        else
        {
        update();
        }  
        }
        
    }//GEN-LAST:event_btnCadastroClienteActionPerformed

    private void btnExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClienteActionPerformed
        // TODO add your handling code here:
        String textId = txtId.getText();
        if(textId.isEmpty()){
            JOptionPane.showMessageDialog(null, "Selecione um cliente para fazer a exclusao");
        }
        else
        {
        delete();
        }
    }//GEN-LAST:event_btnExcluirClienteActionPerformed

    private void tblClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesMouseClicked
        // TODO add your handling code here:
        int lineSelected = tblClientes.getSelectedRow();
        int idBuscado = Integer.parseInt(tblClientes.getValueAt(lineSelected, 0).toString());
        
        Cliente clienteSearch = new Cliente();
        Cliente clienteResult = new Cliente();
        ClienteDAO cDAO = new ClienteDAO();
        
        clienteSearch.setId(idBuscado);
        
        clienteResult = cDAO.returnClienteTela(clienteSearch);
        
        txtId.setText(String.valueOf(clienteResult.getId()));
        txtNome.setText(clienteResult.getNome());
        txtCPF.setText((String.valueOf(clienteResult.getCpf())));
        txtEmail.setText(clienteResult.getEmail());
        txtEndereco.setText(clienteResult.getEndereco());
        txtTel.setText(String.valueOf(clienteResult.getTel()));
        
    }//GEN-LAST:event_tblClientesMouseClicked

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        clean();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnAtualizaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizaClienteActionPerformed
        // TODO add your handling code here:
        String txtButton = btnCadastroCliente.getText();
        String textId = txtId.getText();
        if(textId.isEmpty()){
            JOptionPane.showMessageDialog(null, "Selecione um cliente para fazer as altera√ß√µes");
        }
        else
        {
        if(txtButton=="Cadastrar"){
        btnCadastroCliente.setText("Atualizando...");
        btnCadastroCliente.setText("Atualizar");
        }
        else{
            btnCadastroCliente.setText("Atualizar");
            btnCadastroCliente.setText("Cadastrar");
        }
        }
    }//GEN-LAST:event_btnAtualizaClienteActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        TelaInicio tela = new TelaInicio();
        tela.show();
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void save(){
        Cliente c = new Cliente();
        ClienteDAO cDAO = new ClienteDAO();
        
        try{
        c.setNome(txtNome.getText());
        c.setCpf(Integer.parseInt(txtCPF.getText()));
        c.setTel(Integer.parseInt(txtTel.getText()));
        c.setEmail(txtEmail.getText());
        c.setEndereco(txtEndereco.getText());
        } catch (NumberFormatException ex){}
        
        if(verificacaoCamposVazios(c)==false){
            JOptionPane.showMessageDialog(null, "Preencha todos os campos");
        }
        else
        {
        cDAO.createCliente(c);
        
        fillTable();
        
        clean();
        }
    }
    
    public boolean verificacaoCamposVazios(Cliente c){
        if(c.getNome().isEmpty()||
           c.getCpf()==0||
           c.getTel()==0||
           c.getEmail().isEmpty()||
           c.getEndereco().isEmpty())
        {
            return false;
        }
        return true;
        
    }
    
    private void delete(){
        Cliente c = new Cliente();
        ClienteDAO cDAO = new ClienteDAO();
        int lineSelected = tblClientes.getSelectedRow();
        String nome = tblClientes.getValueAt(lineSelected, 1).toString();
        
        c.setId(Integer.parseInt(txtId.getText()));      
        int result = JOptionPane.showConfirmDialog(null, "Deseja excluir o cliente: " + nome,
                "Alerta de exclusao",JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        
        if(result == JOptionPane.OK_OPTION){
            cDAO.deleteCliente(c);
        }
        else{
            JOptionPane.showMessageDialog(null, "A exclusao do cliente foi cancelada");
        }
        
        fillTable();
        
        clean();
    }
    
    private void update(){
        Cliente c = new Cliente();
        ClienteDAO cDAO = new ClienteDAO();
        int lineSelected = tblClientes.getSelectedRow();
        String nome = tblClientes.getValueAt(lineSelected, 1).toString();
        
        try {
        c.setId(Integer.parseInt(txtId.getText()));
        c.setNome(txtNome.getText());
        c.setCpf(Integer.parseInt(txtCPF.getText()));
        c.setEndereco(txtEndereco.getText());
        c.setTel(Integer.parseInt(txtTel.getText()));
        c.setEmail(txtEmail.getText());
        } catch (IndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(null, "Nenhum cliente selecionado");
        }
        
        int result = JOptionPane.showConfirmDialog(null, "Deseja atualizar o cliente: " + nome,
                "Alerta de altualiza√ß√£o",JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        
        if(result == JOptionPane.OK_OPTION){
            cDAO.updateCliente(c);
        }
        else{
            JOptionPane.showMessageDialog(null, "A atualiza√ß√£o do cliente foi cancelada");
        }
        
        fillTable();

        clean();
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizaCliente;
    private javax.swing.JButton btnCadastroCliente;
    private javax.swing.JButton btnExcluirCliente;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblClientes;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEnderco;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTel;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtTel;
    // End of variables declaration//GEN-END:variables
}
